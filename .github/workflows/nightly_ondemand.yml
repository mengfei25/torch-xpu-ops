name: Nightly-OnDemand Tests

on:
  workflow_dispatch:
    inputs:
      node_name:
        required: true
        type: string
        default: ''
      setup_xpu:
        type: string
        default: ''

permissions: read-all

jobs:
  setup-xpu:
    name: setup-xpu-for-${{ matrix.node_name }}
    if: ${{ inputs.setup_xpu == 'yes' }}
    runs-on: ${{ matrix.node_name }}
    strategy:
      matrix:
        node_name: ${{ toJson(inputs.node_name) }}
    steps:
      - name: Install XPU
        run: |
          sudo su -
          set -xe
          # Clean
          rm -rf .intel ./intel /opt/intel .cache .config .condarc .conda .gitconfig
          rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
          rm -rf /etc/apt/sources.list.d/intel-*
          apt-get autoclean && apt-get clean
          apt update

          # Install common
          apt install gpg-agent wget curl sudo gcc g++ gcc-11 g++-11 cmake git unzip zip libgl1 zlib1g-dev gh expect numactl tmux htop -y

          # Install oneapi DLE
          wget https://registrationcenter-download.intel.com/akdlm/IRC_NAS/3435dc45-055e-4f7a-86b1-779931772404/intel-deep-learning-essentials-2025.1.3.7_offline.sh
          bash intel-deep-learning-essentials-2025.1.3.7_offline.sh -a -s --eula accept --action install

          # install conda
          curl -L -O "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
          bash Miniforge3-$(uname)-$(uname -m).sh -b -f -p "/opt/conda"

          # Install Driver
          # remove rolling
          . /etc/os-release
          apt autoremove -y flex bison \
            intel-fw-gpu intel-i915-dkms xpu-smi \
            intel-opencl-icd libze-intel-gpu1 libze1 \
            intel-media-va-driver-non-free libmfx-gen1 libvpl2 \
            libegl-mesa0 libegl1-mesa libegl1-mesa-dev libgbm1 libgl1-mesa-dev libgl1-mesa-dri \
            libglapi-mesa libglx-mesa0 libigdgmm12 libxatracker2 mesa-va-drivers \
            mesa-vdpau-drivers mesa-vulkan-drivers va-driver-all vainfo hwinfo clinfo intel-ocloc \
            libigc-dev intel-igc-cm libigdfcl-dev libigfxcmrt-dev libze-dev

          # install lts
          rm -rf /etc/apt/sources.list.d/*
          wget -qO - https://repositories.intel.com/gpu/intel-graphics.key |sudo gpg --yes --dearmor --output /usr/share/keyrings/intel-graphics.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/gpu/ubuntu ${VERSION_CODENAME}/lts/2350 unified" |tee /etc/apt/sources.list.d/intel-gpu-${VERSION_CODENAME}.list
          rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
          apt-get autoclean && apt-get clean
          apt update
          apt install -y \
            linux-headers-$(uname -r) \
            linux-modules-extra-$(uname -r) \
            flex bison intel-fw-gpu intel-i915-dkms xpu-smi intel-opencl-icd intel-level-zero-gpu level-zero \
            intel-media-va-driver-non-free libmfxgen1 libvpl2 \
            libegl-mesa0 libegl1-mesa libegl1-mesa-dev libgbm1 libgl1-mesa-dev libgl1-mesa-dri \
            libglapi-mesa libgles2-mesa-dev libglx-mesa0 libigdgmm12 libxatracker2 mesa-va-drivers \
            mesa-vdpau-drivers mesa-vulkan-drivers va-driver-all vainfo hwinfo clinfo \
            libigc-dev intel-igc-cm libigdfcl-dev libigfxcmrt-dev level-zero-dev

  check-nodes-env:
    runs-on: ${{ matrix.node_name }}
    strategy:
      matrix:
        node_name: ${{ toJson(inputs.node_name) }}
    needs: setup-xpu
    if: ${{ always() }}
    name: check-nodes-env-for-${{ matrix.node_name }}
    steps:
      - name: Check env
        run: |
          set -xe
          # hardware
          df -h
          lscpu
          free -h
          scaling_governor=$(cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor |sort |uniq)
          if [ $(sudo -n true > /dev/null 2>&1 && echo $? || echo $?) -eq 0 ];then
              if [ "${scaling_governor}" != "performance" ];then
                  # set frequency governor to performance mode
                  sudo apt-get install -y linux-tools-common linux-tools-$(uname -r) linux-cloud-tools-$(uname -r)
                  sudo cpupower frequency-set -g performance
              fi
              # clean cache
              sync; sudo sh -c "echo 3 > /proc/sys/vm/drop_caches" || true
          else
              echo "[INFO] You do NOT have ROOT permission to set system config."
              echo "       The frequency governor is ${scaling_governor}."
          fi
          # software
          cat /etc/os-release
          source /opt/intel/oneapi/setvars.sh > /dev/null
          sycl-ls
          icpx -v
          uname -a
          apt search libigc-dev
          apt search level-zero-dev
          gcc -v && g++ -v
